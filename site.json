{"title":"Script.apex","githubRepo":"Click-to-Cloud/Script.apex","googleAnalytics":"","index":{"title":"Home","description":"Script.apex is a library that evaluates Javascript expressions in Apex.","content":" Script Evaluation Script.apex evaluates JavaScript expressions to provide dynamic scripting feature to Apex. Context Evaluation Script.apex uses variables from context to provide dynamic evaluations. Symantic Node Script.apex creates parsed symantic nodes right at your disposal. ","srcFilePath":"src/pages/index.soy","id":"pages","location":"/./","url":"/script-apex/./","children":{"docs":{"title":"Docs","description":"Everything you need to know to get started.","content":" Docs Start learning how to leverage the power of . Choose a Guide Each one provide step by step coverage for every core feature. ","srcFilePath":"src/pages/docs/index.soy","id":"docs","location":"/docs/","url":"/script-apex/docs/","children":{"search":{"title":"Search","description":"Find what you're looking for in the documentation.","hidden":true,"content":" Electric Docs Start learning how to leverage the power of . ","srcFilePath":"src/pages/docs/search.soy","id":"search","location":"/docs/search.html","url":"/script-apex/docs/search.html"},"Evaluation":{"title":"Evaluation","description":"Evaluation","layout":"guide","icon":"flash","weight":1,"content":" {$page.description} Simple Evaluation Simple expressions can be passed directly to evaluate them. Object result = ScriptEngine.getInstance().eval('1 + 2 * (3 - 1)'); Context Evaluation We can also pass in a context with variables to evaluate the expression. Map context = new Map{ 'a' = 1, 'b' = 2 }; Object result = ScriptEngine.getInstance().eval('a + b', context); Limitations Assignment expressions and function invocations are not supported in evaluation of JavaScript expressions. ","srcFilePath":"src/pages/docs/Evaluation/index.md","id":"Evaluation","location":"/docs/Evaluation/","url":"/script-apex/docs/Evaluation/"},"Parsing":{"title":"Parsing","description":"Parsing","layout":"guide","icon":"code-file","weight":2,"content":" {$page.description} Parsing Expression Here is how we can parse JavaScript expressions. Jsep.Node node = new Jsep('1 + 2').parse(); Expression Support Supported Unary Operator | Name | Description | | ---- | ----------- | | - | Negate number | | ! | Negate boolean | | ++ | Only prefix supported | | -- | Only prefix supported | Supported Logical Operator | Name | Description | | ---- | ----------- | | && | Logical and | | \\\\ | Logical or | Supported Binary Operator | Name | Description | | ---- | ----------- | | == | Apex == | | != | Apex != | | === | Apex == | | !== | Apex != | | < | Apex < | | | Apex | | = | | + | Apex + | | - | Apex - | | * | Apex * | | / | Apex / | | % | Apex Math.mod | Supported Structure | Name | Description | | ---- | ----------- | | Conditional Expression(? :) | Yes | | Array Literal | Yes | | Object Literal | Yes | For example, ScriptEngine.getInstance.eval('[\"a\", \"b\"]'); // Array literal ScriptEngine.getInstance.eval('{ \"name\": \"test\", age: 18 }'); // Object literal ","srcFilePath":"src/pages/docs/Parsing/index.md","id":"Parsing","location":"/docs/Parsing/","url":"/script-apex/docs/Parsing/"}},"childIds":["Evaluation","Parsing","search"]},"tutorials":{"title":"Tutorials","description":"The tutorials","url":"/script-apex/tutorials/getting_started/step_1.html","layout":false,"content":" ","srcFilePath":"src/pages/tutorials/index.soy","id":"tutorials","location":"/tutorials/","customURL":true,"children":{"getting_started":{"title":"Getting Started","description":"The Getting Started Tutorial","tutorialTitle":"Getting started with Script.apex","url":"/script-apex/tutorials/getting_started/step_1.html","layout":false,"content":" ","srcFilePath":"src/pages/tutorials/getting_started/index.soy","id":"getting_started","location":"/tutorials/getting_started/","customURL":true,"children":{"step_1":{"title":"Installation","description":"Include Apex files","buttonTitle":"Done","parentId":"getting_started","layout":"tutorial","time":90,"weight":1,"content":" {$page.title} Include Jsep.cls, JsepTest.cls(optional), ScriptEngine.cls and ScriptEngineTest.cls(optional) into your Org, and you are ready to go. ","srcFilePath":"src/pages/tutorials/getting_started/step_1.md","id":"step_1","location":"/tutorials/getting_started/step_1.html","url":"/script-apex/tutorials/getting_started/step_1.html"},"step_2":{"title":"Evaluate JavaScript Expressions","description":"Evaluate JavaScript Expressions","buttonTitle":"Done","parentId":"getting_started","layout":"tutorial","time":90,"weight":2,"content":" {$page.title} Evaluating JavaScript expressions is as simple as one line of code: Object result = ScriptEngine.getInstance().eval('1 + 2 * (3 - 1)'); ","srcFilePath":"src/pages/tutorials/getting_started/step_2.md","id":"step_2","location":"/tutorials/getting_started/step_2.html","url":"/script-apex/tutorials/getting_started/step_2.html"},"step_3":{"title":"Evaluating with Context","description":"Evaluating with Context","buttonTitle":"Done","parentId":"getting_started","layout":"tutorial","time":90,"weight":3,"content":" {$page.title} Pass the context in and we can evaluate using the variables inside. Map context = new Map{ 'list' = new List{ 'a' }, 'map' = new Map{ 'name' = 'b'} }; Object result = ScriptEngine.getInstance().eval('list[0] + map.name', context); ","srcFilePath":"src/pages/tutorials/getting_started/step_3.md","id":"step_3","location":"/tutorials/getting_started/step_3.html","url":"/script-apex/tutorials/getting_started/step_3.html"},"step_4":{"title":"Get Parsed Nodes","description":"Get Parsed Nodes","buttonTitle":"Done","parentId":"getting_started","layout":"tutorial","time":90,"weight":4,"content":" {$page.title} One line and we can get the parsed node to continue working with it. Jsep.Node node = new Jsep('a + b').parse(); ","srcFilePath":"src/pages/tutorials/getting_started/step_4.md","id":"step_4","location":"/tutorials/getting_started/step_4.html","url":"/script-apex/tutorials/getting_started/step_4.html"}},"childIds":["step_1","step_2","step_3","step_4"]}},"childIds":["getting_started"]}},"childIds":["docs","tutorials"]},"basePath":"/script-apex"}